<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Receipt Form - <%= currentBranchDetails ? currentBranchDetails.name : 'Unknown Branch' %></title>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* --- General Styles (Unchanged) --- */
        form:not(#login-form) { max-width: 950px; } fieldset { border: 1px solid #ddd; padding: 15px 20px; margin-bottom: 20px; border-radius: 5px; } legend { font-weight: bold; color: #333; padding: 0 10px; } hr { margin: 25px 0; border-top: 1px solid #eee; }

        /* --- Customer Section (Duplicate from estimate CSS) --- */
        .customer-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;}
        #customer_search_container { position: relative; margin-bottom: 10px; display: none; }
        #customer_suggestions { /* ... same ... */ display: none; position: absolute; border: 1px solid #ccc; background-color: white; max-height: 200px; overflow-y: auto; width: calc(100% - 2px); z-index: 1000; box-shadow: 0 4px 8px rgba(0,0,0,0.1); list-style-type: none; padding: 0; margin: 0; border-radius: 0 0 5px 5px; }
        #customer_suggestions li { padding: 8px 12px; cursor: pointer; border-bottom: 1px solid #eee; font-size: 0.9em; } #customer_suggestions li:last-child { border-bottom: none; } #customer_suggestions li:hover { background-color: #f0f0f0; } #customer_suggestions li strong { color: #0056b3; }
        #selected_customer_display { /* ... same ... */ border: 1px dashed #ccc; padding: 10px 15px; margin-top: 10px; border-radius: 5px; background-color: #f9f9f9; font-size: 0.95em; display: none; }
        #selected_customer_display .display-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; } #selected_customer_display .display-header strong { font-size: 1.1em; color: #333; }
        #selected_customer_display .details-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 5px 15px; } #selected_customer_display .details-grid p { margin: 2px 0; } #selected_customer_display .details-grid strong { color: #555; display: inline-block; min-width: 60px; } #clear_selection_btn { font-size: 0.9em; color: #dc3545; cursor: pointer; text-decoration: underline; background: none; border: none; padding: 0; }
        #new_customer_fields { display: block; }
        .customer-toggle-btn { background: none; border: none; font-size: 1.4em; color: #007bff; cursor: pointer; padding: 0 5px; vertical-align: middle; } .customer-toggle-btn:hover { color: #0056b3; }

        /* --- Item Row & Live Preview Styles (Duplicate / Unchanged) --- */
        /* ... */
         .item-row { display: grid; grid-template-columns: 1fr auto 80px 50px auto; gap: 10px; align-items: center; margin-bottom: 10px; padding-bottom: 10px; border-bottom: 1px dashed #eee; } .item-row:last-child { border-bottom: none; } .item-row label { display: none; } .item-row input { margin-bottom: 0; } .item-row .mrp-input, .item-row .discount-input { max-width: 100px; text-align: right; } .item-row .discount-amount-display { font-size: 0.9em; color: #555; min-width: 50px; text-align: right; padding-right: 5px;} .remove-item-btn { background-color: #dc3545; color: white; border: none; border-radius: 4px; padding: 5px 8px; cursor: pointer; font-size: 0.9em; line-height: 1.2; } .remove-item-btn:hover { background-color: #c82333; } #add-item-btn { display: inline-block; background-color: #28a745; color: white; border: none; border-radius: 50%; width: 30px; height: 30px; font-size: 1.2em; line-height: 28px; cursor: pointer; margin-left: 10px; vertical-align: middle; text-align: center;} #items-container { margin-top: 0; border: 1px solid #eee; padding: 15px; border-radius: 5px; } .item-header { display: grid; grid-template-columns: 1fr auto 80px 50px auto; gap: 10px; font-weight: bold; color: #555; font-size: 0.9em; margin-bottom: 5px; padding: 0 5px; } .item-header > div:nth-child(n+2) { text-align: right; }
         #live-preview-receipt { margin-top: 10px; padding-top: 10px; border-top: 1px solid #eee; font-size: 1.05em; font-weight: bold; } #live-preview-receipt div { text-align: right; margin-bottom: 5px; } #live-preview-receipt span { display: inline-block; min-width: 100px; text-align: right; font-family: monospace; } #live-preview-receipt .label { display: inline-block; min-width: 250px; text-align: right; font-weight: normal; color: #333; padding-right: 10px; } #live-preview-receipt .subtotal .label, #live-preview-receipt .overall-discount-display .label { font-size: 0.95em; font-weight: normal;} #live-preview-receipt .overall-discount-display span { color: #dc3545; } #live-preview-receipt .total span { color: #007bff; font-size: 1.1em; } #live-preview-receipt .due span { color: #dc3545; font-size: 1.1em; }

    </style>
</head>
<body>
    <form id="receipt-form" action="/receipt-submit" method="POST">
        <h1>Money Receipt Form</h1>
         <% if (currentBranchDetails && sessionUser) { %> <p> Branch: <strong><%= currentBranchDetails.name %></strong> | User: <%= sessionUser.username %> | <a href="/logout">Logout</a> | <a href="/estimate-form">Go to Estimate Form</a> </p> <% } %>
        <hr>

        <!-- Customer Section -->
        <fieldset>
             <div class="customer-header">
                 <legend>Customer Information</legend>
                 <button type="button" id="customer_toggle_btn" class="customer-toggle-btn" title="Search Existing Customer">
                      <i class="fa-solid fa-magnifying-glass"></i>
                 </button>
            </div>
            <input type="hidden" id="selected_customer_id" name="customer_id" value="">
            <div id="customer_search_container">
                <label for="customer_search">Search Existing (ID/Name/Mobile):</label>
                <input type="text" id="customer_search" name="customer_search_term" autocomplete="off" placeholder="Start typing ID, Name or Mobile...">
                <ul id="customer_suggestions"></ul>
            </div>
             <div id="selected_customer_display">
                 <div class="display-header">
                      <strong><span id="display_customer_name"></span></strong>
                      <button type="button" id="clear_selection_btn" title="Clear selection and enter new customer details">Clear</button>
                 </div>
                 <div class="details-grid">
                      <p><strong>ID:</strong> <span id="display_customer_id"></span></p>
                      <p><strong>Mobile:</strong> <span id="display_customer_mobile"></span></p>
                      <p><strong>Gender:</strong> <span id="display_customer_gender"></span></p>
                      <p><strong>DOB:</strong> <span id="display_customer_dob"></span></p>
                      <p><strong>Age:</strong> <span id="display_customer_age"></span></p>
                 </div>
            </div>
            <div id="new_customer_fields">
                <h4>Enter New Customer Details:</h4>
                <div class="form-grid">
                    <div class="full-width"> <label for="new_customer_name">Customer Name:</label> <input type="text" id="new_customer_name" name="new_customer_name"> </div>
                    <div> <label for="new_customer_mobile">Mobile No:</label> <input type="tel" id="new_customer_mobile" name="new_customer_mobile" pattern="[0-9\s+-]*"> </div>
                    <div> <label for="new_customer_dob">Date of Birth:</label> <input type="text" id="new_customer_dob" name="new_customer_dob" placeholder="DD/MM/YYYY" class="flatpickr-date"> <small>Optional if Age provided</small></div>
                    <div> <label for="new_customer_age">Age (Years):</label> <input type="number" id="new_customer_age" name="new_customer_age" min="0" max="130"> <small>Optional if DOB provided</small> </div>
                    <div> <label>Gender:</label> <div class="radio-group"> <input type="radio" id="new_male" name="new_customer_gender" value="Male" checked> <label for="new_male">Male</label> <input type="radio" id="new_female" name="new_customer_gender" value="Female"> <label for="new_female">Female</label> <input type="radio" id="new_other" name="new_customer_gender" value="Other"> <label for="new_other">Other</label> </div> </div>
                </div>
            </div>
        </fieldset>
        <hr>

        <!-- Items Section (Unchanged) -->
        <fieldset> <legend>Tests / Packages <button type="button" id="add-item-btn" title="Add Item">+</button></legend> <div class="item-header"><div>Package Name</div> <div>MRP (₹)</div> <div>Disc (%)</div> <div>Disc Amt (₹)</div> <div>Action</div></div> <div id="items-container"><div class="item-row"><input type="text" name="package_names[]" placeholder="Select or Type Package" list="package-list" required class="package-name-input item-calc-trigger"><input type="number" name="mrps[]" placeholder="MRP" step="0.01" min="0" required class="mrp-input item-calc-trigger"><input type="number" name="item_discounts[]" placeholder="Disc %" step="0.1" min="0" max="100" value="0" class="discount-input item-calc-trigger"><span class="discount-amount-display">0.00</span><button type="button" class="remove-item-btn" onclick="removeItem(this)">X</button></div></div> <datalist id="package-list"></datalist> </fieldset> <hr>

        <!-- Payment & Other Details Section (Unchanged) -->
        <fieldset> <legend>Payment & Other Details</legend> <div class="form-grid"> <div><label for="discount_percentage">Overall Discount (%):</label><input type="number" id="discount_percentage" name="discount_percentage" step="0.1" min="0" max="100" value="0" class="item-calc-trigger"></div> <div><label for="amount_received">Received Amount:</label><input type="number" id="amount_received" name="amount_received" step="0.01" min="0" required class="item-calc-trigger"></div> <div><label for="due_amount_manual">Due Amount Override (Optional):</label><input type="number" id="due_amount_manual" name="due_amount_manual" step="0.01" min="0" placeholder="Auto-calculated if blank" class="item-calc-trigger"><small>Leave blank for auto-calculation.</small></div> <div><label for="num_tests">No of Tests:</label><input type="number" id="num_tests" name="num_tests" min="0" placeholder="Auto-count if blank"><small>Leave blank to count items automatically.</small></div> <div><label for="conducted_at">Tests Conducted At:</label><input type="text" id="conducted_at" name="conducted_at" placeholder="e.g., Branch Name / Lab"></div> <div class="full-width"><label for="referred_by">Referred By Dr.:</label><input type="text" id="referred_by" name="referred_by"></div> <div class="full-width"><label for="payment_method">Payment Method:</label><select id="payment_method" name="payment_method"><option value="Cash" selected>Cash</option> <option value="Card">Card</option> <option value="UPI">UPI</option><option value="Mixed">Mixed</option> <option value="Other">Other</option></select></div> <div class="full-width"><label for="notes">Notes:</label><textarea id="notes" name="notes" rows="3"></textarea></div> </div> <div id="live-preview-receipt"> <div><span class="label">Total MRP:</span> ₹<span id="calculated-mrp">0.00</span></div> <div class="subtotal"><span class="label">Subtotal (After Item Disc):</span> ₹<span id="calculated-subtotal">0.00</span></div> <div class="overall-discount-display"><span class="label">Overall Disc Amount:</span> ₹<span id="calculated-overall-discount-amount">0.00</span></div> <div class="total"><span class="label">Net Payable:</span> ₹<span id="calculated-total-receipt">0.00</span></div> <div class="due"><span class="label">Amount Due:</span> ₹<span id="calculated-due">0.00</span></div> </div> </fieldset>

       <button type="submit" class="full-width">Generate & Save Receipt</button>
    </form>
    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="/form_logic.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Initialize the shared logic for a 'receipt' form
            initializeFormLogic('receipt');
        });
    </script>
    
    <!-- JavaScript 
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        // --- Shared Vars & Init (Unchanged) ---
        let packageData = []; let customerSearchTimeout;
        flatpickr(".flatpickr-date", { dateFormat: "d/m/Y", allowInput: true });

        // --- DOMContentLoaded (Unchanged) ---
        document.addEventListener('DOMContentLoaded', async () => { try { const r = await fetch('/api/packages'); if (!r.ok) throw new Error(`E:${r.status}`); packageData = await r.json(); populateDatalist(); } catch (e) { console.error("Pkg fetch err:", e); } addEventListenersToAllRowsReceipt(); updateTotalReceipt(); document.getElementById('discount_percentage').addEventListener('input', updateTotalReceipt); document.getElementById('amount_received').addEventListener('input', updateTotalReceipt); document.getElementById('due_amount_manual').addEventListener('input', updateTotalReceipt); document.getElementById('add-item-btn').addEventListener('click', addItem); document.getElementById('customer_toggle_btn').addEventListener('click', toggleCustomerMode); document.getElementById('clear_selection_btn').addEventListener('click', clearCustomerSelection); const searchInput = document.getElementById('customer_search'); const suggestionsList = document.getElementById('customer_suggestions'); searchInput.addEventListener('input', () => { clearTimeout(customerSearchTimeout); const q = searchInput.value; if (q.length < 1) { suggestionsList.innerHTML = ''; suggestionsList.style.display = 'none'; return; } customerSearchTimeout = setTimeout(() => { fetchCustomerSuggestions(q); }, 300); }); document.addEventListener('click', (e) => { if (!document.getElementById('customer_search_container').contains(e.target) && !document.getElementById('customer_toggle_btn').contains(e.target)) { suggestionsList.style.display = 'none'; } }); document.getElementById('new_customer_dob').addEventListener('change', validateAgeDob); document.getElementById('new_customer_age').addEventListener('input', validateAgeDob); setCustomerMode('new'); });

        // --- Customer Mode (Identical JS) ---
        function toggleCustomerMode() { /* ... Same ... */ const currentMode = document.getElementById('new_customer_fields').style.display === 'none' ? 'search' : 'new'; setCustomerMode(currentMode === 'new' ? 'search' : 'new'); }
        function setCustomerMode(mode) { /* ... Same ... */ const searchContainer = document.getElementById('customer_search_container'); const displayContainer = document.getElementById('selected_customer_display'); const newFieldsContainer = document.getElementById('new_customer_fields'); const toggleBtnIcon = document.getElementById('customer_toggle_btn').querySelector('i'); const hiddenCustomerIdInput = document.getElementById('selected_customer_id'); const searchInput = document.getElementById('customer_search'); if (mode === 'search') { searchContainer.style.display = 'block'; newFieldsContainer.style.display = 'none'; displayContainer.style.display = hiddenCustomerIdInput.value ? 'block' : 'none'; toggleBtnIcon.classList.remove('fa-magnifying-glass'); toggleBtnIcon.classList.add('fa-user-plus'); document.getElementById('customer_toggle_btn').title = "Enter New Customer"; document.getElementById('new_customer_name').required = false; searchInput.focus(); } else { searchContainer.style.display = 'none'; newFieldsContainer.style.display = 'block'; displayContainer.style.display = 'none'; toggleBtnIcon.classList.remove('fa-user-plus'); toggleBtnIcon.classList.add('fa-magnifying-glass'); document.getElementById('customer_toggle_btn').title = "Search Existing Customer"; hiddenCustomerIdInput.value = ''; searchInput.value = ''; document.getElementById('customer_suggestions').style.display = 'none'; document.getElementById('new_customer_name').required = true; document.getElementById('new_customer_name').focus(); } validateAgeDob(); }
        function clearCustomerSelection() { /* ... Same ... */ document.getElementById('selected_customer_id').value = ''; setCustomerMode('new'); }
        function validateAgeDob() { /* ... Same ... */ const dobInput = document.getElementById('new_customer_dob'); const ageInput = document.getElementById('new_customer_age'); if (new_customer_fields.style.display !== 'none') { const dobValue = dobInput.value.trim(); const ageValue = ageInput.value.trim(); /* Basic validation/styling if needed */ } }

        // --- Customer Search & Select (Identical JS) ---
        async function fetchCustomerSuggestions(query) { /* ... Same ... */ const suggestionsList = document.getElementById('customer_suggestions'); try { const r = await fetch(`/api/customers/search?q=${encodeURIComponent(query)}`); if (!r.ok) throw new Error('Network error'); const customers = await r.json(); suggestionsList.innerHTML = ''; if (customers.length > 0) { customers.forEach(cust => { const li = document.createElement('li'); li.innerHTML = cust.display_text; /* Pass all needed data */ li.dataset.customerId = cust.id; li.dataset.customerName = cust.name; li.dataset.customerMobile = cust.mobile || ''; li.dataset.customerGender = cust.gender || ''; li.dataset.customerDob = cust.dob || ''; li.dataset.customerDobFormatted = cust.dob_formatted || 'N/A'; li.dataset.customerAge = cust.age !== null ? cust.age : ''; li.dataset.displayAge = cust.display_age || 'N/A'; li.addEventListener('click', () => selectCustomer(li.dataset)); suggestionsList.appendChild(li); }); suggestionsList.style.display = 'block'; } else { suggestionsList.innerHTML = '<li>No customers found</li>'; suggestionsList.style.display = 'block'; } } catch (error) { console.error('Error fetching customer suggestions:', error); suggestionsList.innerHTML = '<li>Error fetching data</li>'; suggestionsList.style.display = 'block'; } }
        function selectCustomer(customerData) { /* ... Same ... */ document.getElementById('selected_customer_id').value = customerData.customerId; document.getElementById('display_customer_id').textContent = `CUST-${String(customerData.customerId).padStart(10, '0')}`; document.getElementById('display_customer_name').textContent = customerData.customerName; document.getElementById('display_customer_mobile').textContent = customerData.customerMobile || 'N/A'; document.getElementById('display_customer_gender').textContent = customerData.customerGender || 'N/A'; document.getElementById('display_customer_dob').textContent = customerData.customerDobFormatted || 'N/A'; document.getElementById('display_customer_age').textContent = customerData.displayAge || 'N/A'; document.getElementById('customer_suggestions').style.display = 'none'; document.getElementById('customer_search').value = ''; setCustomerMode('search'); document.getElementById('selected_customer_display').style.display = 'block'; document.getElementById('new_customer_fields').style.display = 'none'; document.getElementById('new_customer_name').required = false; }

        // --- Item Management (Identical JS, calls updateTotalReceipt) ---
        function populateDatalist() { /* ... */ const d=document.getElementById('package-list'); d.innerHTML=''; packageData.forEach(p => { const o=document.createElement('option'); o.value=p.name; o.dataset.mrp=p.mrp; d.appendChild(o); }); }
        function addItem() { /* ... Calls updateTotalReceipt ... */ const c=document.getElementById('items-container'); const n=document.createElement('div'); n.classList.add('item-row'); n.innerHTML=`<input type="text" name="package_names[]" placeholder="Select or Type Package" list="package-list" required class="package-name-input item-calc-trigger"><input type="number" name="mrps[]" placeholder="MRP" step="0.01" min="0" required class="mrp-input item-calc-trigger"><input type="number" name="item_discounts[]" placeholder="Disc %" step="0.1" min="0" max="100" value="0" class="discount-input item-calc-trigger"><span class="discount-amount-display">0.00</span><button type="button" class="remove-item-btn" onclick="removeItem(this)">X</button>`; c.appendChild(n); addEventListenersToRowReceipt(n); updateTotalReceipt(); }
        function removeItem(b) { /* ... Calls updateTotalReceipt ... */ const r=b.closest('.item-row'); if(document.querySelectorAll('.item-row').length>1){ r.remove(); updateTotalReceipt(); }else{ alert("Need at least one item."); } }
        function addEventListenersToAllRowsReceipt() { document.querySelectorAll('.item-row').forEach(addEventListenersToRowReceipt); }
        function addEventListenersToRowReceipt(r) { /* ... Calls updateTotalReceipt ... */ const ni=r.querySelector('.package-name-input'); const mi=r.querySelector('.mrp-input'); ni.addEventListener('input',(e)=>{ const sn=e.target.value; const o=document.querySelector(`#package-list option[value="${sn}"]`); if(o&&o.dataset.mrp){ mi.value=parseFloat(o.dataset.mrp).toFixed(2); mi.readOnly=true; } else { mi.readOnly=false; } updateTotalReceipt(); }); ni.addEventListener('blur',()=>{ const cn=ni.value; const o=document.querySelector(`#package-list option[value="${cn}"]`); if(!o){mi.readOnly=false;} }); mi.addEventListener('input', updateTotalReceipt); r.querySelector('.discount-input').addEventListener('input', updateTotalReceipt); }

        // --- Calculation (Identical JS) ---
        function updateTotalReceipt() { /* ... Same calculation logic ... */ let totalMrp = 0; let subtotalAfterItemDiscounts = 0; document.querySelectorAll('.item-row').forEach(row => { const mrpInput = row.querySelector('.mrp-input'); const itemDiscountInput = row.querySelector('.discount-input'); const itemDiscountDisplay = row.querySelector('.discount-amount-display'); const mrp = parseFloat(mrpInput.value) || 0; const itemDiscPerc = parseFloat(itemDiscountInput.value) || 0; const validItemDiscPerc = Math.max(0, Math.min(100, itemDiscPerc)); if (itemDiscPerc !== validItemDiscPerc) { itemDiscountInput.value = validItemDiscPerc; } const itemPriceAfterDiscount = mrp * (1 - (validItemDiscPerc / 100)); totalMrp += mrp; subtotalAfterItemDiscounts += itemPriceAfterDiscount; const itemDiscAmount = mrp * (validItemDiscPerc / 100); itemDiscountDisplay.textContent = itemDiscAmount.toFixed(2); }); const overallDiscountInput = document.getElementById('discount_percentage'); const overallDiscountPercent = parseFloat(overallDiscountInput.value) || 0; const validOverallDiscPerc = Math.max(0, Math.min(100, overallDiscountPercent)); if (overallDiscountPercent !== validOverallDiscPerc) { overallDiscountInput.value = validOverallDiscPerc; } const overallDiscountAmount = subtotalAfterItemDiscounts * (validOverallDiscPerc / 100); const finalTotal = subtotalAfterItemDiscounts - overallDiscountAmount; const receivedAmountInput = document.getElementById('amount_received'); let receivedAmount = parseFloat(receivedAmountInput.value) || 0; if(receivedAmount < 0) { receivedAmount = 0; receivedAmountInput.value = 0; } const dueAmountManualInput = document.getElementById('due_amount_manual'); const dueAmountManualValue = dueAmountManualInput.value.trim(); let dueAmount = 0; if (dueAmountManualValue !== "" && !isNaN(parseFloat(dueAmountManualValue)) && parseFloat(dueAmountManualValue) >= 0) { dueAmount = parseFloat(dueAmountManualValue); } else { dueAmount = Math.max(0, finalTotal - receivedAmount); } document.getElementById('calculated-mrp').textContent = totalMrp.toFixed(2); document.getElementById('calculated-subtotal').textContent = subtotalAfterItemDiscounts.toFixed(2); document.getElementById('calculated-overall-discount-amount').textContent = overallDiscountAmount.toFixed(2); document.getElementById('calculated-total-receipt').textContent = finalTotal.toFixed(2); document.getElementById('calculated-due').textContent = dueAmount.toFixed(2); }

    </script> commented out for sanity-->
</body>
</html>